"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/main/page",{

/***/ "(app-pages-browser)/./src/hooks/useTasks.ts":
/*!*******************************!*\
  !*** ./src/hooks/useTasks.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCreateFolder: function() { return /* binding */ useCreateFolder; },\n/* harmony export */   useCreateTask: function() { return /* binding */ useCreateTask; },\n/* harmony export */   useDeleteFolder: function() { return /* binding */ useDeleteFolder; },\n/* harmony export */   useDuplicateFolder: function() { return /* binding */ useDuplicateFolder; },\n/* harmony export */   useFolder: function() { return /* binding */ useFolder; },\n/* harmony export */   useFolders: function() { return /* binding */ useFolders; },\n/* harmony export */   useTasks: function() { return /* binding */ useTasks; },\n/* harmony export */   useUpdateFolder: function() { return /* binding */ useUpdateFolder; },\n/* harmony export */   useUpdateTask: function() { return /* binding */ useUpdateTask; },\n/* harmony export */   useUpdateTaskPosition: function() { return /* binding */ useUpdateTaskPosition; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/api */ \"(app-pages-browser)/./src/api/index.ts\");\n\n\nconst QUERY_KEYS = {\n    FOLDERS: \"folders\",\n    TASKS: \"tasks\"\n};\nconst queryKeys = {\n    folders: {\n        all: [\n            QUERY_KEYS.FOLDERS\n        ],\n        byId: (id)=>[\n                QUERY_KEYS.FOLDERS,\n                id\n            ]\n    },\n    tasks: {\n        all: [\n            QUERY_KEYS.TASKS\n        ]\n    }\n};\nfunction useFolders() {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.folders.all,\n        queryFn: ()=>_api__WEBPACK_IMPORTED_MODULE_0__.api.getFolders(),\n        staleTime: 30000,\n        retry: 2\n    });\n}\nfunction useTasks() {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.tasks.all,\n        queryFn: ()=>_api__WEBPACK_IMPORTED_MODULE_0__.api.getTasks(),\n        staleTime: 30000,\n        retry: 2\n    });\n}\nfunction useFolder(id) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.folders.byId(id),\n        queryFn: ()=>_api__WEBPACK_IMPORTED_MODULE_0__.api.getFolder(id),\n        enabled: !!id,\n        staleTime: 30000\n    });\n}\nfunction useCreateFolder() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (folder)=>_api__WEBPACK_IMPORTED_MODULE_0__.api.createFolder(folder),\n        onSuccess: (newFolder)=>{\n            queryClient.invalidateQueries({\n                queryKey: queryKeys.folders.all\n            });\n            queryClient.setQueryData(queryKeys.folders.all, (old)=>old ? [\n                    ...old,\n                    newFolder\n                ] : [\n                    newFolder\n                ]);\n        },\n        onError: (error)=>{\n            console.error(\"Failed to create folder:\", error);\n        }\n    });\n}\nfunction useUpdateFolder() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (param)=>{\n            let { id, updates } = param;\n            return _api__WEBPACK_IMPORTED_MODULE_0__.api.updateFolder(id, updates);\n        },\n        onMutate: async (param)=>{\n            let { id, updates } = param;\n            await queryClient.cancelQueries({\n                queryKey: queryKeys.folders.byId(id)\n            });\n            const previousFolder = queryClient.getQueryData(queryKeys.folders.byId(id));\n            queryClient.setQueryData(queryKeys.folders.byId(id), (old)=>old ? {\n                    ...old,\n                    ...updates\n                } : undefined);\n            return {\n                previousFolder\n            };\n        },\n        onError: (err, variables, context)=>{\n            if (context === null || context === void 0 ? void 0 : context.previousFolder) {\n                queryClient.setQueryData(queryKeys.folders.byId(variables.id), context.previousFolder);\n            }\n        },\n        onSettled: (folder)=>{\n            if (folder) {\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.folders.all\n                });\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.folders.byId(folder.id)\n                });\n            }\n        }\n    });\n}\nfunction useUpdateTask() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (param)=>{\n            let { id, updates } = param;\n            return _api__WEBPACK_IMPORTED_MODULE_0__.api.updateTask(id, updates);\n        },\n        onMutate: async (param)=>{\n            let { id, updates } = param;\n            await queryClient.cancelQueries({\n                queryKey: queryKeys.tasks.byId(id)\n            });\n            const previousTask = queryClient.getQueryData(queryKeys.tasks.byId(id));\n            queryClient.setQueryData(queryKeys.tasks.byId(id), (old)=>old ? {\n                    ...old,\n                    ...updates\n                } : undefined);\n            return {\n                previousTask\n            };\n        },\n        onError: (err, variables, context)=>{\n            if (context === null || context === void 0 ? void 0 : context.previousTask) {\n                queryClient.setQueryData(queryKeys.tasks.byId(variables.id), context.previousTask);\n            }\n        },\n        onSettled: (folder)=>{\n            if (folder) {\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.tasks.all\n                });\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.tasks.byId(folder.id)\n                });\n            }\n        }\n    });\n}\nfunction useCreateTask() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (task)=>_api__WEBPACK_IMPORTED_MODULE_0__.api.createTask(task),\n        onMutate: async (newTask)=>{\n            await queryClient.cancelQueries({\n                queryKey: newTask.folderId ? queryKeys.folders.byId(newTask.folderId) : queryKeys.tasks.all\n            });\n            const previousFolderData = newTask.folderId ? queryClient.getQueryData(queryKeys.folders.byId(newTask.folderId)) : null;\n            if (newTask.folderId) {\n                queryClient.setQueryData(queryKeys.folders.byId(newTask.folderId), (old)=>{\n                    if (!old) return old;\n                    return {\n                        ...old,\n                        tasks: [\n                            ...old.tasks,\n                            {\n                                ...newTask,\n                                id: \"temp-id\"\n                            }\n                        ]\n                    };\n                });\n            }\n            return {\n                previousFolderData\n            };\n        },\n        onSuccess: (task)=>{\n            if (task.folderId) {\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.folders.byId(task.folderId)\n                });\n            }\n            queryClient.refetchQueries({\n                queryKey: queryKeys.tasks.all\n            });\n        },\n        onError: (error, newTask, context)=>{\n            if (newTask.folderId && (context === null || context === void 0 ? void 0 : context.previousFolderData)) {\n                queryClient.setQueryData(queryKeys.folders.byId(newTask.folderId), context.previousFolderData);\n            }\n            console.error(\"Failed to create task:\", error);\n        }\n    });\n}\nfunction useUpdateTaskPosition() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (param)=>{\n            let { id, position } = param;\n            return _api__WEBPACK_IMPORTED_MODULE_0__.api.updateTaskPosition(id, position);\n        },\n        onSuccess: (task)=>{\n            if (task === null || task === void 0 ? void 0 : task.folderId) {\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.folders.byId(task.folderId)\n                });\n            }\n        }\n    });\n}\nfunction useDeleteFolder() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (id)=>_api__WEBPACK_IMPORTED_MODULE_0__.api.deleteFolder(id),\n        onMutate: async (id)=>{\n            await queryClient.cancelQueries({\n                queryKey: queryKeys.folders.all\n            });\n            const previousFolders = queryClient.getQueryData(queryKeys.folders.all);\n            queryClient.setQueryData(queryKeys.folders.all, (old)=>old === null || old === void 0 ? void 0 : old.filter((folder)=>folder.id !== id));\n            return {\n                previousFolders\n            };\n        },\n        onError: (err, id, context)=>{\n            if (context === null || context === void 0 ? void 0 : context.previousFolders) {\n                queryClient.setQueryData(queryKeys.folders.all, context.previousFolders);\n            }\n        },\n        onSettled: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: queryKeys.folders.all\n            });\n        }\n    });\n}\nfunction useDuplicateFolder() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (id)=>_api__WEBPACK_IMPORTED_MODULE_0__.api.duplicateFolder(id),\n        onSuccess: (newFolder)=>{\n            queryClient.invalidateQueries({\n                queryKey: queryKeys.folders.all\n            });\n            queryClient.setQueryData(queryKeys.folders.all, (old)=>old ? [\n                    ...old,\n                    newFolder\n                ] : [\n                    newFolder\n                ]);\n        },\n        onError: (error)=>{\n            console.error(\"Failed to duplicate folder:\", error);\n        }\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useTasks.ts\n"));

/***/ })

});