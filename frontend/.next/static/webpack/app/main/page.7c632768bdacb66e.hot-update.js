"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/main/page",{

/***/ "(app-pages-browser)/./src/hooks/useTasks.ts":
/*!*******************************!*\
  !*** ./src/hooks/useTasks.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCreateFolder: function() { return /* binding */ useCreateFolder; },\n/* harmony export */   useCreateTask: function() { return /* binding */ useCreateTask; },\n/* harmony export */   useDeleteFolder: function() { return /* binding */ useDeleteFolder; },\n/* harmony export */   useDuplicateFolder: function() { return /* binding */ useDuplicateFolder; },\n/* harmony export */   useFolder: function() { return /* binding */ useFolder; },\n/* harmony export */   useFolders: function() { return /* binding */ useFolders; },\n/* harmony export */   useTasks: function() { return /* binding */ useTasks; },\n/* harmony export */   useUpdateFolder: function() { return /* binding */ useUpdateFolder; },\n/* harmony export */   useUpdateTask: function() { return /* binding */ useUpdateTask; },\n/* harmony export */   useUpdateTaskPosition: function() { return /* binding */ useUpdateTaskPosition; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/api */ \"(app-pages-browser)/./src/api/index.ts\");\n\n\nconst QUERY_KEYS = {\n    FOLDERS: \"folders\",\n    TASKS: \"tasks\"\n};\nconst queryKeys = {\n    folders: {\n        all: [\n            QUERY_KEYS.FOLDERS\n        ],\n        byId: (id)=>[\n                QUERY_KEYS.FOLDERS,\n                id\n            ]\n    },\n    tasks: {\n        all: [\n            QUERY_KEYS.TASKS\n        ],\n        byId: (id)=>[\n                QUERY_KEYS.TASKS,\n                id\n            ]\n    }\n};\nfunction useFolders() {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.folders.all,\n        queryFn: ()=>_api__WEBPACK_IMPORTED_MODULE_0__.api.getFolders(),\n        staleTime: 30000,\n        retry: 2\n    });\n}\nfunction useTasks() {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.tasks.all,\n        queryFn: ()=>_api__WEBPACK_IMPORTED_MODULE_0__.api.getTasks(),\n        staleTime: 30000,\n        retry: 2\n    });\n}\nfunction useFolder(id) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: queryKeys.folders.byId(id),\n        queryFn: ()=>_api__WEBPACK_IMPORTED_MODULE_0__.api.getFolder(id),\n        enabled: !!id,\n        staleTime: 30000\n    });\n}\nfunction useCreateFolder() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (folder)=>_api__WEBPACK_IMPORTED_MODULE_0__.api.createFolder(folder),\n        onSuccess: (newFolder)=>{\n            queryClient.invalidateQueries({\n                queryKey: queryKeys.folders.all\n            });\n            queryClient.setQueryData(queryKeys.folders.all, (old)=>old ? [\n                    ...old,\n                    newFolder\n                ] : [\n                    newFolder\n                ]);\n        },\n        onError: (error)=>{\n            console.error(\"Failed to create folder:\", error);\n        }\n    });\n}\nfunction useUpdateFolder() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (param)=>{\n            let { id, updates } = param;\n            return _api__WEBPACK_IMPORTED_MODULE_0__.api.updateFolder(id, updates);\n        },\n        onMutate: async (param)=>{\n            let { id, updates } = param;\n            await queryClient.cancelQueries({\n                queryKey: queryKeys.folders.byId(id)\n            });\n            const previousFolder = queryClient.getQueryData(queryKeys.folders.byId(id));\n            queryClient.setQueryData(queryKeys.folders.byId(id), (old)=>old ? {\n                    ...old,\n                    ...updates\n                } : undefined);\n            return {\n                previousFolder\n            };\n        },\n        onError: (err, variables, context)=>{\n            if (context === null || context === void 0 ? void 0 : context.previousFolder) {\n                queryClient.setQueryData(queryKeys.folders.byId(variables.id), context.previousFolder);\n            }\n        },\n        onSettled: (folder)=>{\n            if (folder) {\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.folders.all\n                });\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.folders.byId(folder.id)\n                });\n            }\n        }\n    });\n}\nfunction useUpdateTask() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (param)=>{\n            let { id, updates } = param;\n            return _api__WEBPACK_IMPORTED_MODULE_0__.api.updateTask(id, updates);\n        },\n        onMutate: async (param)=>{\n            let { id, updates } = param;\n            await queryClient.cancelQueries({\n                queryKey: queryKeys.tasks.byId(id)\n            });\n            const previousTask = queryClient.getQueryData(queryKeys.tasks.byId(id));\n            queryClient.setQueryData(queryKeys.tasks.byId(id), (old)=>old ? {\n                    ...old,\n                    ...updates\n                } : undefined);\n            return {\n                previousTask\n            };\n        },\n        onError: (err, variables, context)=>{\n            if (context === null || context === void 0 ? void 0 : context.previousTask) {\n                queryClient.setQueryData(queryKeys.tasks.byId(variables.id), context.previousTask);\n            }\n        },\n        onSettled: (folder)=>{\n            if (folder) {\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.tasks.all\n                });\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.tasks.byId(folder.id)\n                });\n            }\n        }\n    });\n}\nfunction useCreateTask() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (task)=>_api__WEBPACK_IMPORTED_MODULE_0__.api.createTask(task),\n        onMutate: async (newTask)=>{\n            await queryClient.cancelQueries({\n                queryKey: newTask.folderId ? queryKeys.folders.byId(newTask.folderId) : queryKeys.tasks.all\n            });\n            const previousFolderData = newTask.folderId ? queryClient.getQueryData(queryKeys.folders.byId(newTask.folderId)) : null;\n            if (newTask.folderId) {\n                queryClient.setQueryData(queryKeys.folders.byId(newTask.folderId), (old)=>{\n                    if (!old) return old;\n                    return {\n                        ...old,\n                        tasks: [\n                            ...old.tasks,\n                            {\n                                ...newTask,\n                                id: \"temp-id\"\n                            }\n                        ]\n                    };\n                });\n            }\n            return {\n                previousFolderData\n            };\n        },\n        onSuccess: (task)=>{\n            if (task.folderId) {\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.folders.byId(task.folderId)\n                });\n            }\n            queryClient.refetchQueries({\n                queryKey: queryKeys.tasks.all\n            });\n        },\n        onError: (error, newTask, context)=>{\n            if (newTask.folderId && (context === null || context === void 0 ? void 0 : context.previousFolderData)) {\n                queryClient.setQueryData(queryKeys.folders.byId(newTask.folderId), context.previousFolderData);\n            }\n            console.error(\"Failed to create task:\", error);\n        }\n    });\n}\nfunction useUpdateTaskPosition() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (param)=>{\n            let { id, position } = param;\n            return _api__WEBPACK_IMPORTED_MODULE_0__.api.updateTaskPosition(id, position);\n        },\n        onSuccess: (task)=>{\n            if (task === null || task === void 0 ? void 0 : task.folderId) {\n                queryClient.invalidateQueries({\n                    queryKey: queryKeys.folders.byId(task.folderId)\n                });\n            }\n        }\n    });\n}\nfunction useDeleteFolder() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (id)=>_api__WEBPACK_IMPORTED_MODULE_0__.api.deleteFolder(id),\n        onMutate: async (id)=>{\n            await queryClient.cancelQueries({\n                queryKey: queryKeys.folders.all\n            });\n            const previousFolders = queryClient.getQueryData(queryKeys.folders.all);\n            queryClient.setQueryData(queryKeys.folders.all, (old)=>old === null || old === void 0 ? void 0 : old.filter((folder)=>folder.id !== id));\n            return {\n                previousFolders\n            };\n        },\n        onError: (err, id, context)=>{\n            if (context === null || context === void 0 ? void 0 : context.previousFolders) {\n                queryClient.setQueryData(queryKeys.folders.all, context.previousFolders);\n            }\n        },\n        onSettled: ()=>{\n            queryClient.invalidateQueries({\n                queryKey: queryKeys.folders.all\n            });\n        }\n    });\n}\nfunction useDuplicateFolder() {\n    const queryClient = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutation)({\n        mutationFn: (id)=>_api__WEBPACK_IMPORTED_MODULE_0__.api.duplicateFolder(id),\n        onSuccess: (newFolder)=>{\n            queryClient.setQueryData(queryKeys.folders.all, (old)=>old ? [\n                    ...old,\n                    newFolder\n                ] : [\n                    newFolder\n                ]);\n            queryClient.invalidateQueries({\n                queryKey: queryKeys.folders.all\n            });\n        },\n        onError: (error)=>{\n            console.error(\"Failed to duplicate folder:\", error);\n        }\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VUYXNrcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUE4RTtBQUNsRDtBQUc1QixNQUFNSSxhQUFhO0lBQ2pCQyxTQUFTO0lBQ1RDLE9BQU87QUFDVDtBQUVBLE1BQU1DLFlBQVk7SUFDaEJDLFNBQVM7UUFDUEMsS0FBSztZQUFDTCxXQUFXQyxPQUFPO1NBQUM7UUFDekJLLE1BQU0sQ0FBQ0MsS0FBZTtnQkFBQ1AsV0FBV0MsT0FBTztnQkFBRU07YUFBRztJQUNoRDtJQUNBQyxPQUFPO1FBQ0xILEtBQUs7WUFBQ0wsV0FBV0UsS0FBSztTQUFDO1FBQ3ZCSSxNQUFNLENBQUNDLEtBQWU7Z0JBQUNQLFdBQVdFLEtBQUs7Z0JBQUVLO2FBQUc7SUFDOUM7QUFDRjtBQUVPLFNBQVNFO0lBQ2QsT0FBT2IsK0RBQVFBLENBQUM7UUFDZGMsVUFBVVAsVUFBVUMsT0FBTyxDQUFDQyxHQUFHO1FBQy9CTSxTQUFTLElBQU1aLHFDQUFHQSxDQUFDYSxVQUFVO1FBQzdCQyxXQUFXO1FBQ1hDLE9BQU87SUFDVDtBQUNGO0FBRU8sU0FBU0M7SUFDZCxPQUFPbkIsK0RBQVFBLENBQUM7UUFDZGMsVUFBVVAsVUFBVUssS0FBSyxDQUFDSCxHQUFHO1FBQzdCTSxTQUFTLElBQU1aLHFDQUFHQSxDQUFDaUIsUUFBUTtRQUMzQkgsV0FBVztRQUNYQyxPQUFPO0lBQ1Q7QUFDRjtBQUVPLFNBQVNHLFVBQVVWLEVBQVU7SUFDbEMsT0FBT1gsK0RBQVFBLENBQUM7UUFDZGMsVUFBVVAsVUFBVUMsT0FBTyxDQUFDRSxJQUFJLENBQUNDO1FBQ2pDSSxTQUFTLElBQU1aLHFDQUFHQSxDQUFDbUIsU0FBUyxDQUFDWDtRQUM3QlksU0FBUyxDQUFDLENBQUNaO1FBQ1hNLFdBQVc7SUFDYjtBQUNGO0FBRU8sU0FBU087SUFDZCxNQUFNQyxjQUFjdkIscUVBQWNBO0lBRWxDLE9BQU9ELGtFQUFXQSxDQUFDO1FBQ2pCeUIsWUFB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QUFTLENBQUNDO1lBQ1JDLFFBQVFELEtBQUssQ0FBQywrQkFBK0JBO1FBQy9DO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvaG9va3MvdXNlVGFza3MudHM/NDE0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VRdWVyeSwgdXNlTXV0YXRpb24sIHVzZVF1ZXJ5Q2xpZW50IH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JztcbmltcG9ydCB7IGFwaSB9IGZyb20gJ0AvYXBpJztcbmltcG9ydCB7IFRhc2ssIEZvbGRlciB9IGZyb20gJ0AvdHlwZXMvdGFzayc7XG5cbmNvbnN0IFFVRVJZX0tFWVMgPSB7XG4gIEZPTERFUlM6ICdmb2xkZXJzJyxcbiAgVEFTS1M6ICd0YXNrcycsXG59IGFzIGNvbnN0O1xuXG5jb25zdCBxdWVyeUtleXMgPSB7XG4gIGZvbGRlcnM6IHtcbiAgICBhbGw6IFtRVUVSWV9LRVlTLkZPTERFUlNdIGFzIGNvbnN0LFxuICAgIGJ5SWQ6IChpZDogbnVtYmVyKSA9PiBbUVVFUllfS0VZUy5GT0xERVJTLCBpZF0gYXMgY29uc3QsXG4gIH0sXG4gIHRhc2tzOiB7XG4gICAgYWxsOiBbUVVFUllfS0VZUy5UQVNLU10gYXMgY29uc3QsXG4gICAgYnlJZDogKGlkOiBudW1iZXIpID0+IFtRVUVSWV9LRVlTLlRBU0tTLCBpZF0gYXMgY29uc3QsXG4gIH0sXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlRm9sZGVycygpIHtcbiAgcmV0dXJuIHVzZVF1ZXJ5KHtcbiAgICBxdWVyeUtleTogcXVlcnlLZXlzLmZvbGRlcnMuYWxsLFxuICAgIHF1ZXJ5Rm46ICgpID0+IGFwaS5nZXRGb2xkZXJzKCksXG4gICAgc3RhbGVUaW1lOiAzMDAwMCxcbiAgICByZXRyeTogMixcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VUYXNrcygpIHtcbiAgcmV0dXJuIHVzZVF1ZXJ5KHtcbiAgICBxdWVyeUtleTogcXVlcnlLZXlzLnRhc2tzLmFsbCxcbiAgICBxdWVyeUZuOiAoKSA9PiBhcGkuZ2V0VGFza3MoKSxcbiAgICBzdGFsZVRpbWU6IDMwMDAwLFxuICAgIHJldHJ5OiAyLFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUZvbGRlcihpZDogbnVtYmVyKSB7XG4gIHJldHVybiB1c2VRdWVyeSh7XG4gICAgcXVlcnlLZXk6IHF1ZXJ5S2V5cy5mb2xkZXJzLmJ5SWQoaWQpLFxuICAgIHF1ZXJ5Rm46ICgpID0+IGFwaS5nZXRGb2xkZXIoaWQpLFxuICAgIGVuYWJsZWQ6ICEhaWQsXG4gICAgc3RhbGVUaW1lOiAzMDAwMCxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VDcmVhdGVGb2xkZXIoKSB7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcblxuICByZXR1cm4gdXNlTXV0YXRpb24oe1xuICAgIG11dGF0aW9uRm46IChmb2xkZXI6IFBhcnRpYWw8Rm9sZGVyPikgPT4gYXBpLmNyZWF0ZUZvbGRlcihmb2xkZXIpLFxuICAgIG9uU3VjY2VzczogKG5ld0ZvbGRlcikgPT4ge1xuICAgICAgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoeyBxdWVyeUtleTogcXVlcnlLZXlzLmZvbGRlcnMuYWxsIH0pO1xuICAgICAgXG4gICAgICBxdWVyeUNsaWVudC5zZXRRdWVyeURhdGE8Rm9sZGVyW10+KFxuICAgICAgICBxdWVyeUtleXMuZm9sZGVycy5hbGwsIFxuICAgICAgICAob2xkKSA9PiBvbGQgPyBbLi4ub2xkLCBuZXdGb2xkZXJdIDogW25ld0ZvbGRlcl1cbiAgICAgICk7XG4gICAgfSxcbiAgICBvbkVycm9yOiAoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgZm9sZGVyOicsIGVycm9yKTtcbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVVwZGF0ZUZvbGRlcigpIHtcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpO1xuXG4gIHJldHVybiB1c2VNdXRhdGlvbih7XG4gICAgbXV0YXRpb25GbjogKHsgaWQsIHVwZGF0ZXMgfTogeyBpZDogbnVtYmVyOyB1cGRhdGVzOiBQYXJ0aWFsPEZvbGRlcj4gfSkgPT4gXG4gICAgICBhcGkudXBkYXRlRm9sZGVyKGlkLCB1cGRhdGVzKSxcbiAgICBvbk11dGF0ZTogYXN5bmMgKHsgaWQsIHVwZGF0ZXMgfSkgPT4ge1xuICAgICAgYXdhaXQgcXVlcnlDbGllbnQuY2FuY2VsUXVlcmllcyh7IHF1ZXJ5S2V5OiBxdWVyeUtleXMuZm9sZGVycy5ieUlkKGlkKSB9KTtcblxuICAgICAgY29uc3QgcHJldmlvdXNGb2xkZXIgPSBxdWVyeUNsaWVudC5nZXRRdWVyeURhdGE8Rm9sZGVyPihcbiAgICAgICAgcXVlcnlLZXlzLmZvbGRlcnMuYnlJZChpZClcbiAgICAgICk7XG5cbiAgICAgIHF1ZXJ5Q2xpZW50LnNldFF1ZXJ5RGF0YTxGb2xkZXI+KFxuICAgICAgICBxdWVyeUtleXMuZm9sZGVycy5ieUlkKGlkKSxcbiAgICAgICAgKG9sZCkgPT4gb2xkID8geyAuLi5vbGQsIC4uLnVwZGF0ZXMgfSA6IHVuZGVmaW5lZFxuICAgICAgKTtcblxuICAgICAgcmV0dXJuIHsgcHJldmlvdXNGb2xkZXIgfTtcbiAgICB9LFxuICAgIG9uRXJyb3I6IChlcnIsIHZhcmlhYmxlcywgY29udGV4dCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQ/LnByZXZpb3VzRm9sZGVyKSB7XG4gICAgICAgIHF1ZXJ5Q2xpZW50LnNldFF1ZXJ5RGF0YShcbiAgICAgICAgICBxdWVyeUtleXMuZm9sZGVycy5ieUlkKHZhcmlhYmxlcy5pZCksXG4gICAgICAgICAgY29udGV4dC5wcmV2aW91c0ZvbGRlclxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0sXG4gICAgb25TZXR0bGVkOiAoZm9sZGVyKSA9PiB7XG4gICAgICBpZiAoZm9sZGVyKSB7XG4gICAgICAgIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHsgcXVlcnlLZXk6IHF1ZXJ5S2V5cy5mb2xkZXJzLmFsbCB9KTtcbiAgICAgICAgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoeyBcbiAgICAgICAgICBxdWVyeUtleTogcXVlcnlLZXlzLmZvbGRlcnMuYnlJZChmb2xkZXIuaWQpIFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVVwZGF0ZVRhc2soKSB7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcblxuICByZXR1cm4gdXNlTXV0YXRpb24oe1xuICAgIG11dGF0aW9uRm46ICh7IGlkLCB1cGRhdGVzIH06IHsgaWQ6IG51bWJlcjsgdXBkYXRlczogUGFydGlhbDxUYXNrPiB9KSA9PiBcbiAgICAgIGFwaS51cGRhdGVUYXNrKGlkLCB1cGRhdGVzKSxcbiAgICBvbk11dGF0ZTogYXN5bmMgKHsgaWQsIHVwZGF0ZXMgfSkgPT4ge1xuICAgICAgYXdhaXQgcXVlcnlDbGllbnQuY2FuY2VsUXVlcmllcyh7IHF1ZXJ5S2V5OiBxdWVyeUtleXMudGFza3MuYnlJZChpZCkgfSk7XG4gICAgICBjb25zdCBwcmV2aW91c1Rhc2sgPSBxdWVyeUNsaWVudC5nZXRRdWVyeURhdGE8VGFzaz4oXG4gICAgICAgIHF1ZXJ5S2V5cy50YXNrcy5ieUlkKGlkKVxuICAgICAgKTtcbiAgICAgIHF1ZXJ5Q2xpZW50LnNldFF1ZXJ5RGF0YTxUYXNrPihcbiAgICAgICAgcXVlcnlLZXlzLnRhc2tzLmJ5SWQoaWQpLFxuICAgICAgICAob2xkKSA9PiBvbGQgPyB7IC4uLm9sZCwgLi4udXBkYXRlcyB9IDogdW5kZWZpbmVkXG4gICAgICApO1xuICAgICAgcmV0dXJuIHsgcHJldmlvdXNUYXNrIH07XG4gICAgfSxcbiAgICBvbkVycm9yOiAoZXJyLCB2YXJpYWJsZXMsIGNvbnRleHQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0Py5wcmV2aW91c1Rhc2spIHtcbiAgICAgICAgcXVlcnlDbGllbnQuc2V0UXVlcnlEYXRhKFxuICAgICAgICAgIHF1ZXJ5S2V5cy50YXNrcy5ieUlkKHZhcmlhYmxlcy5pZCksXG4gICAgICAgICAgY29udGV4dC5wcmV2aW91c1Rhc2tcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uU2V0dGxlZDogKGZvbGRlcikgPT4ge1xuICAgICAgaWYgKGZvbGRlcikge1xuICAgICAgICBxdWVyeUNsaWVudC5pbnZhbGlkYXRlUXVlcmllcyh7IHF1ZXJ5S2V5OiBxdWVyeUtleXMudGFza3MuYWxsIH0pO1xuICAgICAgICBxdWVyeUNsaWVudC5pbnZhbGlkYXRlUXVlcmllcyh7IFxuICAgICAgICAgIHF1ZXJ5S2V5OiBxdWVyeUtleXMudGFza3MuYnlJZChmb2xkZXIuaWQpIFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUNyZWF0ZVRhc2soKSB7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcbiAgcmV0dXJuIHVzZU11dGF0aW9uKHtcbiAgICBtdXRhdGlvbkZuOiAodGFzazogUGFydGlhbDxUYXNrPikgPT4gYXBpLmNyZWF0ZVRhc2sodGFzayksXG4gICAgb25NdXRhdGU6IGFzeW5jIChuZXdUYXNrKSA9PiB7XG4gICAgICBhd2FpdCBxdWVyeUNsaWVudC5jYW5jZWxRdWVyaWVzKHsgXG4gICAgICAgIHF1ZXJ5S2V5OiBuZXdUYXNrLmZvbGRlcklkIFxuICAgICAgICAgID8gcXVlcnlLZXlzLmZvbGRlcnMuYnlJZChuZXdUYXNrLmZvbGRlcklkKVxuICAgICAgICAgIDogcXVlcnlLZXlzLnRhc2tzLmFsbCBcbiAgICAgIH0pO1xuICAgICAgY29uc3QgcHJldmlvdXNGb2xkZXJEYXRhID0gbmV3VGFzay5mb2xkZXJJZFxuICAgICAgICA/IHF1ZXJ5Q2xpZW50LmdldFF1ZXJ5RGF0YShxdWVyeUtleXMuZm9sZGVycy5ieUlkKG5ld1Rhc2suZm9sZGVySWQpKVxuICAgICAgICA6IG51bGw7XG5cbiAgICAgIGlmIChuZXdUYXNrLmZvbGRlcklkKSB7XG4gICAgICAgIHF1ZXJ5Q2xpZW50LnNldFF1ZXJ5RGF0YShcbiAgICAgICAgICBxdWVyeUtleXMuZm9sZGVycy5ieUlkKG5ld1Rhc2suZm9sZGVySWQpLCBcbiAgICAgICAgICAob2xkOiBGb2xkZXIgfCB1bmRlZmluZWQpID0+IHtcbiAgICAgICAgICAgIGlmICghb2xkKSByZXR1cm4gb2xkO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgLi4ub2xkLFxuICAgICAgICAgICAgICB0YXNrczogWy4uLm9sZC50YXNrcywgeyAuLi5uZXdUYXNrLCBpZDogJ3RlbXAtaWQnIH0gYXMgVGFza11cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHsgcHJldmlvdXNGb2xkZXJEYXRhIH07XG4gICAgfSxcbiAgICBvblN1Y2Nlc3M6ICh0YXNrKSA9PiB7XG4gICAgICBpZiAodGFzay5mb2xkZXJJZCkge1xuICAgICAgICBxdWVyeUNsaWVudC5pbnZhbGlkYXRlUXVlcmllcyh7IFxuICAgICAgICAgIHF1ZXJ5S2V5OiBxdWVyeUtleXMuZm9sZGVycy5ieUlkKHRhc2suZm9sZGVySWQpIFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHF1ZXJ5Q2xpZW50LnJlZmV0Y2hRdWVyaWVzKHsgcXVlcnlLZXk6IHF1ZXJ5S2V5cy50YXNrcy5hbGwgfSk7XG4gICAgfSxcbiAgICBvbkVycm9yOiAoZXJyb3IsIG5ld1Rhc2ssIGNvbnRleHQpID0+IHtcbiAgICAgIGlmIChuZXdUYXNrLmZvbGRlcklkICYmIGNvbnRleHQ/LnByZXZpb3VzRm9sZGVyRGF0YSkge1xuICAgICAgICBxdWVyeUNsaWVudC5zZXRRdWVyeURhdGEoXG4gICAgICAgICAgcXVlcnlLZXlzLmZvbGRlcnMuYnlJZChuZXdUYXNrLmZvbGRlcklkKSxcbiAgICAgICAgICBjb250ZXh0LnByZXZpb3VzRm9sZGVyRGF0YVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGNyZWF0ZSB0YXNrOicsIGVycm9yKTtcbiAgICB9LFxuICB9KTtcbn1cblxuaW50ZXJmYWNlIFRhc2tQb3NpdGlvblVwZGF0ZSB7XG4gIGlkOiBudW1iZXI7XG4gIHBvc2l0aW9uOiB7IHg6IG51bWJlcjsgeTogbnVtYmVyIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VVcGRhdGVUYXNrUG9zaXRpb24oKSB7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcblxuICByZXR1cm4gdXNlTXV0YXRpb24oe1xuICAgIG11dGF0aW9uRm46ICh7IGlkLCBwb3NpdGlvbiB9OiBUYXNrUG9zaXRpb25VcGRhdGUpID0+IFxuICAgICAgYXBpLnVwZGF0ZVRhc2tQb3NpdGlvbihpZCwgcG9zaXRpb24pLFxuICAgIG9uU3VjY2VzczogKHRhc2spID0+IHtcbiAgICAgIGlmICh0YXNrPy5mb2xkZXJJZCkge1xuICAgICAgICBxdWVyeUNsaWVudC5pbnZhbGlkYXRlUXVlcmllcyh7IFxuICAgICAgICAgIHF1ZXJ5S2V5OiBxdWVyeUtleXMuZm9sZGVycy5ieUlkKHRhc2suZm9sZGVySWQpIFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZURlbGV0ZUZvbGRlcigpIHtcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpO1xuXG4gIHJldHVybiB1c2VNdXRhdGlvbih7XG4gICAgbXV0YXRpb25GbjogKGlkOiBudW1iZXIpID0+IGFwaS5kZWxldGVGb2xkZXIoaWQpLFxuICAgIG9uTXV0YXRlOiBhc3luYyAoaWQpID0+IHtcbiAgICAgIGF3YWl0IHF1ZXJ5Q2xpZW50LmNhbmNlbFF1ZXJpZXMoeyBxdWVyeUtleTogcXVlcnlLZXlzLmZvbGRlcnMuYWxsIH0pO1xuXG4gICAgICBjb25zdCBwcmV2aW91c0ZvbGRlcnMgPSBxdWVyeUNsaWVudC5nZXRRdWVyeURhdGE8Rm9sZGVyW10+KFxuICAgICAgICBxdWVyeUtleXMuZm9sZGVycy5hbGxcbiAgICAgICk7XG5cbiAgICAgIHF1ZXJ5Q2xpZW50LnNldFF1ZXJ5RGF0YTxGb2xkZXJbXT4oXG4gICAgICAgIHF1ZXJ5S2V5cy5mb2xkZXJzLmFsbCxcbiAgICAgICAgKG9sZCkgPT4gb2xkPy5maWx0ZXIoZm9sZGVyID0+IGZvbGRlci5pZCAhPT0gaWQpXG4gICAgICApO1xuXG4gICAgICByZXR1cm4geyBwcmV2aW91c0ZvbGRlcnMgfTtcbiAgICB9LFxuICAgIG9uRXJyb3I6IChlcnIsIGlkLCBjb250ZXh0KSA9PiB7XG4gICAgICBpZiAoY29udGV4dD8ucHJldmlvdXNGb2xkZXJzKSB7XG4gICAgICAgIHF1ZXJ5Q2xpZW50LnNldFF1ZXJ5RGF0YShcbiAgICAgICAgICBxdWVyeUtleXMuZm9sZGVycy5hbGwsXG4gICAgICAgICAgY29udGV4dC5wcmV2aW91c0ZvbGRlcnNcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uU2V0dGxlZDogKCkgPT4ge1xuICAgICAgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoeyBxdWVyeUtleTogcXVlcnlLZXlzLmZvbGRlcnMuYWxsIH0pO1xuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlRHVwbGljYXRlRm9sZGVyKCkge1xuICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5Q2xpZW50KCk7XG5cbiAgcmV0dXJuIHVzZU11dGF0aW9uKHtcbiAgICBtdXRhdGlvbkZuOiAoaWQ6IG51bWJlcikgPT4gYXBpLmR1cGxpY2F0ZUZvbGRlcihpZCksXG4gICAgb25TdWNjZXNzOiAobmV3Rm9sZGVyKSA9PiB7XG4gICAgICBxdWVyeUNsaWVudC5zZXRRdWVyeURhdGE8Rm9sZGVyW10+KFxuICAgICAgICBxdWVyeUtleXMuZm9sZGVycy5hbGwsXG4gICAgICAgIChvbGQpID0+IG9sZCA/IFsuLi5vbGQsIG5ld0ZvbGRlcl0gOiBbbmV3Rm9sZGVyXVxuICAgICAgKTtcbiAgICAgIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHsgcXVlcnlLZXk6IHF1ZXJ5S2V5cy5mb2xkZXJzLmFsbCB9KTtcbiAgICB9LFxuICAgIG9uRXJyb3I6IChlcnJvcikgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGR1cGxpY2F0ZSBmb2xkZXI6JywgZXJyb3IpO1xuICAgIH0sXG4gIH0pO1xufSJdLCJuYW1lcyI6WyJ1c2VRdWVyeSIsInVzZU11dGF0aW9uIiwidXNlUXVlcnlDbGllbnQiLCJhcGkiLCJRVUVSWV9LRVlTIiwiRk9MREVSUyIsIlRBU0tTIiwicXVlcnlLZXlzIiwiZm9sZGVycyIsImFsbCIsImJ5SWQiLCJpZCIsInRhc2tzIiwidXNlRm9sZGVycyIsInF1ZXJ5S2V5IiwicXVlcnlGbiIsImdldEZvbGRlcnMiLCJzdGFsZVRpbWUiLCJyZXRyeSIsInVzZVRhc2tzIiwiZ2V0VGFza3MiLCJ1c2VGb2xkZXIiLCJnZXRGb2xkZXIiLCJlbmFibGVkIiwidXNlQ3JlYXRlRm9sZGVyIiwicXVlcnlDbGllbnQiLCJtdXRhdGlvbkZuIiwiZm9sZGVyIiwiY3JlYXRlRm9sZGVyIiwib25TdWNjZXNzIiwibmV3Rm9sZGVyIiwiaW52YWxpZGF0ZVF1ZXJpZXMiLCJzZXRRdWVyeURhdGEiLCJvbGQiLCJvbkVycm9yIiwiZXJyb3IiLCJjb25zb2xlIiwidXNlVXBkYXRlRm9sZGVyIiwidXBkYXRlcyIsInVwZGF0ZUZvbGRlciIsIm9uTXV0YXRlIiwiY2FuY2VsUXVlcmllcyIsInByZXZpb3VzRm9sZGVyIiwiZ2V0UXVlcnlEYXRhIiwidW5kZWZpbmVkIiwiZXJyIiwidmFyaWFibGVzIiwiY29udGV4dCIsIm9uU2V0dGxlZCIsInVzZVVwZGF0ZVRhc2siLCJ1cGRhdGVUYXNrIiwicHJldmlvdXNUYXNrIiwidXNlQ3JlYXRlVGFzayIsInRhc2siLCJjcmVhdGVUYXNrIiwibmV3VGFzayIsImZvbGRlcklkIiwicHJldmlvdXNGb2xkZXJEYXRhIiwicmVmZXRjaFF1ZXJpZXMiLCJ1c2VVcGRhdGVUYXNrUG9zaXRpb24iLCJwb3NpdGlvbiIsInVwZGF0ZVRhc2tQb3NpdGlvbiIsInVzZURlbGV0ZUZvbGRlciIsImRlbGV0ZUZvbGRlciIsInByZXZpb3VzRm9sZGVycyIsImZpbHRlciIsInVzZUR1cGxpY2F0ZUZvbGRlciIsImR1cGxpY2F0ZUZvbGRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useTasks.ts\n"));

/***/ })

});